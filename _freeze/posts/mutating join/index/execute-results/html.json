{
  "hash": "6fae4d154e264dcad29aefb8ec8966ad",
  "result": {
    "markdown": "---\ntitle: \"Portfolio blog\"\nauthor: \"Philip Kimani\"\ndate: \"2023-03-05\"\ncategories: [data, code, analysis]\nimage: \"image.jpg\"\n---\n\n\nThe **`map2()`** function in the **`purrr`** package of R is used to apply a function to elements of two or more vectors or lists in a pairwise fashion. It iterates over the corresponding elements of the input vectors/lists and returns a new list with the output of applying the specified function to each pair of elements.\n\nThe basic syntax for **`map2()`** is as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#map2(.x, .y, .f, ...)\n```\n:::\n\n\nwhere:\n\n-   **`.x`**, **`.y`**: input vectors or lists to iterate over.\n\n-   **`.f`**: function to apply to each pair of elements from **`.x`** and **`.y`**. This can be a function name or a lambda function defined inline with the formula syntax (**`~`**).\n\n-   **`...`**: additional arguments to pass to **`.f`**.\n\nFor example, let's say we have two vectors **`x`** and **`y`** containing numbers, and we want to calculate the sum of the corresponding elements. We can use **`map2()`** as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(purrr)\n\nx <- c(1, 2, 3)\ny <- c(4, 5, 6)\n\nsums <- map2(x, y, ~ .x + .y)\n\nsums\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] 5\n\n[[2]]\n[1] 7\n\n[[3]]\n[1] 9\n```\n:::\n\n```{.r .cell-code}\n# Output: [1] 5 7 9\n```\n:::\n\n\nHere, the lambda function **`~ .x + .y`** takes two arguments (**`.x`** and **`.y`**) and returns their sum. **`map2()`** applies this function to each pair of elements from **`x`** and **`y`**, and returns a list with the sums.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}